${packaging.scripts.header}

#
# This script is executed in the post-installation phase
#
#   On Debian,
#       $1=configure : is set to 'configure' and if $2 is set, it is an upgrade
#
#   On RedHat,
#       $1=0         : indicates a removal
#       $1=1         : indicates an upgrade



# Sets the default values for fess variables used in this script
FESS_CONF="${packaging.fess.conf.dir}"
FESS_HOME="${packaging.fess.home.dir}"
FESS_USER="${packaging.fess.user}"
FESS_GROUP="${packaging.fess.group}"
FESS_APP_DIR="${packaging.fess.app.dir}"

IS_UPGRADE=false

case "$1" in

    # Debian ####################################################
    configure)

        # If $1=configure and $2 is set, this is an upgrade
        if [ -n $2 ]; then
            IS_UPGRADE=true
        fi
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    # RedHat ####################################################
    1)
        # If $1=1 this is an install
        IS_UPGRADE=false
    ;;
    2)
        # If $1=1 this is an upgrade
        IS_UPGRADE=true
    ;;

    *)
        echo "post install script called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac


# System properties
CIPHER_KEY=`cat /dev/urandom | tr -dc '[:alnum:]' | head -c 16`
sed -i \
    -e "s/app\.cipher\.key=___change__me___/app.cipher.key=$CIPHER_KEY/" \
    $FESS_CONF/fess_config.properties

# Package config
grep 'org.codelibs.fione.app' $FESS_APP_DIR/WEB-INF/classes/lasta_di.properties > /dev/null 2>&1
if [ $? -ne 0 ]; then
  cp -p $FESS_APP_DIR/WEB-INF/classes/lasta_di.properties $FESS_APP_DIR/WEB-INF/classes/lasta_di.properties.fione
  echo "smart.package2 = org.codelibs.fione.app" >> $FESS_APP_DIR/WEB-INF/classes/lasta_di.properties
fi


# Restart fess
echo -n "Restarting fess service..."
if command -v systemctl >/dev/null; then
    systemctl daemon-reload
    systemctl restart fess.service || true

elif [ -x /etc/init.d/fess ]; then
    if command -v invoke-rc.d >/dev/null; then
        invoke-rc.d fess stop >/dev/null || true
        invoke-rc.d fess start >/dev/null || true
    else
        /etc/init.d/fess restart >/dev/null || true
    fi

# older suse linux distributions do not ship with systemd
# but do not have an /etc/init.d/ directory
# this tries to start the fess service on these
# as well without failing this script
elif [ -x /etc/rc.d/init.d/fess ] ; then
    /etc/rc.d/init.d/fess restart >/dev/null || true
fi
echo " OK"

${packaging.scripts.footer}
